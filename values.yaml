# Default values for ejabberd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ejabberd/ecs
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

persistence:
  uploads:
    enabled: true
    existingClaim: ""
    accessMode: ReadWriteOnce
    size: 2Gi
    storageClass: ""
    annotations: {}

  databases:
    enabled: true
    existingClaim: ""
    accessMode: ReadWriteOnce
    size: 2Gi
    storageClass: ""
    annotations: {}

env:
  # The ejabberdctl script reads the CTL_ON_CREATE environment variable the first time the docker container is started, 
  # and reads CTL_ON_START every time the container is started. 
  # Those variables can contain one ejabberdctl command, or several commands separated with the blankspace and ; characters.
  command:
    onCreate: "" # ex: register admin localhost asd
    onStart: "" # ex: stats registeredusers ; check_password admin localhost asd ; status

service:
  type: ClusterIP

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

volumeMounts: []
volumes: []

config: ""
startupScript: ""
